#   OpenBACH is a generic testbed able to control/configure multiple
#   network/physical entities (under test) and collect data from them. It is
#   composed of an Auditorium (HMIs), a Controller, a Collector and multiple
#   Agents (one for each network entity that wants to be tested).
#   
#   
#   Copyright Â© 2016-2023 CNES
#   
#   
#   This file is part of the OpenBACH testbed.
#   
#   
#   OpenBACH is a free software : you can redistribute it and/or modify it under
#   the terms of the GNU General Public License as published by the Free Software
#   Foundation, either version 3 of the License, or (at your option) any later
#   version.
#   
#   This program is distributed in the hope that it will be useful, but WITHOUT
#   ANY WARRANTY, without even the implied warranty of MERCHANTABILITY or FITNESS
#   FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
#   details.
#   
#   You should have received a copy of the GNU General Public License along with
#   this program. If not, see http://www.gnu.org/licenses/.

---

general:
  name: http2_client_plt
  description: >
      This Job generates HTTP2.0 requests to a destination server and computes the page load time.
  job_version: '2.0'
  keywords:
    - http2
    - client
    - traffic
    - generator
    - monitor
    - delay
    - plt
    - download
  persistent: no

platform_configuration:
  - ansible_system: 'Debian'
    ansible_distribution: 'Ubuntu'
    ansible_distribution_version: '16.04'
    command: '/usr/bin/env python3 /opt/openbach/agent/jobs/http2_client_plt/http2_client_plt.py'
    command_stop:

arguments:
  required:
    - name: server_address
      type: ip
      count: 1
      description: The IP address of the server
    - name: port 
      type: 'int'
      count: 1
      description: The port number of the server
  optional:
    - name: sim_t
      type: float
      count: 1
      flag: '--sim-t'
      description: Simulation time in seconds (default=60)
    - name: n_req
      type: int
      count: 1
      flag: '-n'
      description: Number of connections to emulate (default=0)
    - name: page
      type: int
      count: 1
      flag: '-p'
      description: Page number (default=1). Different test pages are available in this jobs (lemonde, wiki, reddit)
  subcommand:
    - group_name: mode (default http requests one after another or requests following an exponential law)
      optional: no
      choices:
        - name: default
          required:
          optional:
        - name: exponential
          required:
            - name: lambd
              type: float
              count: 1
              description: Inter-arrival time expressed as an exponential law lambda (default=1.0)
          optional:

statistics:
  - name: load_time 
    description: Time to load (download) the web page
    frequency: each time a page is loaded
