---

general:
  name:            vlc_receiver
  description: >
      This job plays a VLC video that is streaming over the network and sends statistics about medias contained in this video
  job_version:     '1.1'
  keywords:        [vlc, video, streaming]
  persistent:      False

platform_configuration:
  - ansible_system: 'Debian'
    ansible_distribution:  'Ubuntu'
    ansible_distribution_version: '20.04'
    command: 'sudo -E -u openbach /usr/bin/env python3 /opt/openbach/agent/jobs/vlc_receiver/vlc_receiver.py'
    command_stop:
  - ansible_system: 'Debian'
    ansible_distribution:  'Ubuntu'
    ansible_distribution_version: '22.04'
    command: 'sudo -E -u openbach /usr/bin/env python3 /opt/openbach/agent/jobs/vlc_receiver/vlc_receiver.py'
    command_stop:

arguments:
  required:
    - name:        recv_ip
      type:        'str'
      count:        1
      description: >
          The receiving IP address (may be multicast or a local unicast address)
  optional:
    - name:        recv_port
      type:        'int'
      count:       1
      flag:        '-p'
      description: >
          The receiving port number (Default: 6000)
    - name:        duration
      type:        'int'
      count:       1
      flag:        '-d'
      description: >
          The duration in seconds for receiving video (Default: infinite)
    - name:        interval
      type:        'int'
      count:       1
      flag:        '-i'
      description: >
          The period in seconds to retrieve statistics (Default: 1s).

statistics:
    - name: "demux bytes read"
      description: >
          The amount of data read, in Bytes
      frequency: 'every *interval* seconds'
    - name: "demux bitrate"
      description: >
          The bite rate of video flux, in bits/sec
      frequency: 'every *interval* seconds'
    - name: "frames displayed"
      description: >
          The number of displayed video frames
      frequency: 'every *interval* seconds'
    - name: "frames lost"
      description: >
          The number of video frames lost
      frequency: 'every *interval* seconds'
